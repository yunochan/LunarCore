// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class DoGachaInRollShopCsReqOuterClass {
  /**
   * Protobuf type {@code DoGachaInRollShopCsReq}
   */
  public static final class DoGachaInRollShopCsReq extends ProtoMessage<DoGachaInRollShopCsReq> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 BBJIJINJAFK = 6;</code>
     */
    private int bBJIJINJAFK;

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     */
    private int rollShopId;

    /**
     * <code>optional uint32 gacha_random = 14;</code>
     */
    private int gachaRandom;

    private DoGachaInRollShopCsReq() {
    }

    /**
     * @return a new empty instance of {@code DoGachaInRollShopCsReq}
     */
    public static DoGachaInRollShopCsReq newInstance() {
      return new DoGachaInRollShopCsReq();
    }

    /**
     * <code>optional uint32 BBJIJINJAFK = 6;</code>
     * @return whether the bBJIJINJAFK field is set
     */
    public boolean hasBBJIJINJAFK() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 BBJIJINJAFK = 6;</code>
     * @return this
     */
    public DoGachaInRollShopCsReq clearBBJIJINJAFK() {
      bitField0_ &= ~0x00000001;
      bBJIJINJAFK = 0;
      return this;
    }

    /**
     * <code>optional uint32 BBJIJINJAFK = 6;</code>
     * @return the bBJIJINJAFK
     */
    public int getBBJIJINJAFK() {
      return bBJIJINJAFK;
    }

    /**
     * <code>optional uint32 BBJIJINJAFK = 6;</code>
     * @param value the bBJIJINJAFK to set
     * @return this
     */
    public DoGachaInRollShopCsReq setBBJIJINJAFK(final int value) {
      bitField0_ |= 0x00000001;
      bBJIJINJAFK = value;
      return this;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @return whether the rollShopId field is set
     */
    public boolean hasRollShopId() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @return this
     */
    public DoGachaInRollShopCsReq clearRollShopId() {
      bitField0_ &= ~0x00000002;
      rollShopId = 0;
      return this;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @return the rollShopId
     */
    public int getRollShopId() {
      return rollShopId;
    }

    /**
     * <code>optional uint32 roll_shop_id = 13;</code>
     * @param value the rollShopId to set
     * @return this
     */
    public DoGachaInRollShopCsReq setRollShopId(final int value) {
      bitField0_ |= 0x00000002;
      rollShopId = value;
      return this;
    }

    /**
     * <code>optional uint32 gacha_random = 14;</code>
     * @return whether the gachaRandom field is set
     */
    public boolean hasGachaRandom() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 gacha_random = 14;</code>
     * @return this
     */
    public DoGachaInRollShopCsReq clearGachaRandom() {
      bitField0_ &= ~0x00000004;
      gachaRandom = 0;
      return this;
    }

    /**
     * <code>optional uint32 gacha_random = 14;</code>
     * @return the gachaRandom
     */
    public int getGachaRandom() {
      return gachaRandom;
    }

    /**
     * <code>optional uint32 gacha_random = 14;</code>
     * @param value the gachaRandom to set
     * @return this
     */
    public DoGachaInRollShopCsReq setGachaRandom(final int value) {
      bitField0_ |= 0x00000004;
      gachaRandom = value;
      return this;
    }

    @Override
    public DoGachaInRollShopCsReq copyFrom(final DoGachaInRollShopCsReq other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        bBJIJINJAFK = other.bBJIJINJAFK;
        rollShopId = other.rollShopId;
        gachaRandom = other.gachaRandom;
      }
      return this;
    }

    @Override
    public DoGachaInRollShopCsReq mergeFrom(final DoGachaInRollShopCsReq other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasBBJIJINJAFK()) {
        setBBJIJINJAFK(other.bBJIJINJAFK);
      }
      if (other.hasRollShopId()) {
        setRollShopId(other.rollShopId);
      }
      if (other.hasGachaRandom()) {
        setGachaRandom(other.gachaRandom);
      }
      return this;
    }

    @Override
    public DoGachaInRollShopCsReq clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      bBJIJINJAFK = 0;
      rollShopId = 0;
      gachaRandom = 0;
      return this;
    }

    @Override
    public DoGachaInRollShopCsReq clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof DoGachaInRollShopCsReq)) {
        return false;
      }
      DoGachaInRollShopCsReq other = (DoGachaInRollShopCsReq) o;
      return bitField0_ == other.bitField0_
        && (!hasBBJIJINJAFK() || bBJIJINJAFK == other.bBJIJINJAFK)
        && (!hasRollShopId() || rollShopId == other.rollShopId)
        && (!hasGachaRandom() || gachaRandom == other.gachaRandom);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(bBJIJINJAFK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(rollShopId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(gachaRandom);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(bBJIJINJAFK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(rollShopId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(gachaRandom);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public DoGachaInRollShopCsReq mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 48: {
            // bBJIJINJAFK
            bBJIJINJAFK = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // rollShopId
            rollShopId = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // gachaRandom
            gachaRandom = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.bBJIJINJAFK, bBJIJINJAFK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.rollShopId, rollShopId);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.gachaRandom, gachaRandom);
      }
      output.endObject();
    }

    @Override
    public DoGachaInRollShopCsReq mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case -1536175796: {
            if (input.isAtField(FieldNames.bBJIJINJAFK)) {
              if (!input.trySkipNullValue()) {
                bBJIJINJAFK = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -904898162:
          case -1612413630: {
            if (input.isAtField(FieldNames.rollShopId)) {
              if (!input.trySkipNullValue()) {
                rollShopId = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1635961627:
          case -47579616: {
            if (input.isAtField(FieldNames.gachaRandom)) {
              if (!input.trySkipNullValue()) {
                gachaRandom = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public DoGachaInRollShopCsReq clone() {
      return new DoGachaInRollShopCsReq().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static DoGachaInRollShopCsReq parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new DoGachaInRollShopCsReq(), data).checkInitialized();
    }

    public static DoGachaInRollShopCsReq parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new DoGachaInRollShopCsReq(), input).checkInitialized();
    }

    public static DoGachaInRollShopCsReq parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new DoGachaInRollShopCsReq(), input).checkInitialized();
    }

    /**
     * @return factory for creating DoGachaInRollShopCsReq messages
     */
    public static MessageFactory<DoGachaInRollShopCsReq> getFactory() {
      return DoGachaInRollShopCsReqFactory.INSTANCE;
    }

    private enum DoGachaInRollShopCsReqFactory implements MessageFactory<DoGachaInRollShopCsReq> {
      INSTANCE;

      @Override
      public DoGachaInRollShopCsReq create() {
        return DoGachaInRollShopCsReq.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName bBJIJINJAFK = FieldName.forField("BBJIJINJAFK");

      static final FieldName rollShopId = FieldName.forField("rollShopId", "roll_shop_id");

      static final FieldName gachaRandom = FieldName.forField("gachaRandom", "gacha_random");
    }
  }
}
