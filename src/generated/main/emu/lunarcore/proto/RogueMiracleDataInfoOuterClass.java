// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;
import us.hebi.quickbuf.RepeatedMessage;

public final class RogueMiracleDataInfoOuterClass {
  /**
   * Protobuf type {@code RogueMiracleDataInfo}
   */
  public static final class RogueMiracleDataInfo extends ProtoMessage<RogueMiracleDataInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 KABNOGFDKFI = 2;</code>
     */
    private int kABNOGFDKFI;

    /**
     * <code>optional uint32 NDPAMBJKKFD = 9;</code>
     */
    private int nDPAMBJKKFD;

    /**
     * <code>optional uint32 miracle_id = 10;</code>
     */
    private int miracleId;

    /**
     * <code>optional uint32 NFNNOMAMNAA = 12;</code>
     */
    private int nFNNOMAMNAA;

    /**
     * <code>repeated .RogueMiracleDataInfo.JBFJGEIGGBAEntry JBFJGEIGGBA = 6;</code>
     */
    private final RepeatedMessage<JBFJGEIGGBAEntry> jBFJGEIGGBA = RepeatedMessage.newEmptyInstance(JBFJGEIGGBAEntry.getFactory());

    private RogueMiracleDataInfo() {
    }

    /**
     * @return a new empty instance of {@code RogueMiracleDataInfo}
     */
    public static RogueMiracleDataInfo newInstance() {
      return new RogueMiracleDataInfo();
    }

    /**
     * <code>optional uint32 KABNOGFDKFI = 2;</code>
     * @return whether the kABNOGFDKFI field is set
     */
    public boolean hasKABNOGFDKFI() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 KABNOGFDKFI = 2;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearKABNOGFDKFI() {
      bitField0_ &= ~0x00000001;
      kABNOGFDKFI = 0;
      return this;
    }

    /**
     * <code>optional uint32 KABNOGFDKFI = 2;</code>
     * @return the kABNOGFDKFI
     */
    public int getKABNOGFDKFI() {
      return kABNOGFDKFI;
    }

    /**
     * <code>optional uint32 KABNOGFDKFI = 2;</code>
     * @param value the kABNOGFDKFI to set
     * @return this
     */
    public RogueMiracleDataInfo setKABNOGFDKFI(final int value) {
      bitField0_ |= 0x00000001;
      kABNOGFDKFI = value;
      return this;
    }

    /**
     * <code>optional uint32 NDPAMBJKKFD = 9;</code>
     * @return whether the nDPAMBJKKFD field is set
     */
    public boolean hasNDPAMBJKKFD() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 NDPAMBJKKFD = 9;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearNDPAMBJKKFD() {
      bitField0_ &= ~0x00000002;
      nDPAMBJKKFD = 0;
      return this;
    }

    /**
     * <code>optional uint32 NDPAMBJKKFD = 9;</code>
     * @return the nDPAMBJKKFD
     */
    public int getNDPAMBJKKFD() {
      return nDPAMBJKKFD;
    }

    /**
     * <code>optional uint32 NDPAMBJKKFD = 9;</code>
     * @param value the nDPAMBJKKFD to set
     * @return this
     */
    public RogueMiracleDataInfo setNDPAMBJKKFD(final int value) {
      bitField0_ |= 0x00000002;
      nDPAMBJKKFD = value;
      return this;
    }

    /**
     * <code>optional uint32 miracle_id = 10;</code>
     * @return whether the miracleId field is set
     */
    public boolean hasMiracleId() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 miracle_id = 10;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearMiracleId() {
      bitField0_ &= ~0x00000004;
      miracleId = 0;
      return this;
    }

    /**
     * <code>optional uint32 miracle_id = 10;</code>
     * @return the miracleId
     */
    public int getMiracleId() {
      return miracleId;
    }

    /**
     * <code>optional uint32 miracle_id = 10;</code>
     * @param value the miracleId to set
     * @return this
     */
    public RogueMiracleDataInfo setMiracleId(final int value) {
      bitField0_ |= 0x00000004;
      miracleId = value;
      return this;
    }

    /**
     * <code>optional uint32 NFNNOMAMNAA = 12;</code>
     * @return whether the nFNNOMAMNAA field is set
     */
    public boolean hasNFNNOMAMNAA() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 NFNNOMAMNAA = 12;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearNFNNOMAMNAA() {
      bitField0_ &= ~0x00000008;
      nFNNOMAMNAA = 0;
      return this;
    }

    /**
     * <code>optional uint32 NFNNOMAMNAA = 12;</code>
     * @return the nFNNOMAMNAA
     */
    public int getNFNNOMAMNAA() {
      return nFNNOMAMNAA;
    }

    /**
     * <code>optional uint32 NFNNOMAMNAA = 12;</code>
     * @param value the nFNNOMAMNAA to set
     * @return this
     */
    public RogueMiracleDataInfo setNFNNOMAMNAA(final int value) {
      bitField0_ |= 0x00000008;
      nFNNOMAMNAA = value;
      return this;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.JBFJGEIGGBAEntry JBFJGEIGGBA = 6;</code>
     * @return whether the jBFJGEIGGBA field is set
     */
    public boolean hasJBFJGEIGGBA() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.JBFJGEIGGBAEntry JBFJGEIGGBA = 6;</code>
     * @return this
     */
    public RogueMiracleDataInfo clearJBFJGEIGGBA() {
      bitField0_ &= ~0x00000010;
      jBFJGEIGGBA.clear();
      return this;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.JBFJGEIGGBAEntry JBFJGEIGGBA = 6;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableJBFJGEIGGBA()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public RepeatedMessage<JBFJGEIGGBAEntry> getJBFJGEIGGBA() {
      return jBFJGEIGGBA;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.JBFJGEIGGBAEntry JBFJGEIGGBA = 6;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public RepeatedMessage<JBFJGEIGGBAEntry> getMutableJBFJGEIGGBA() {
      bitField0_ |= 0x00000010;
      return jBFJGEIGGBA;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.JBFJGEIGGBAEntry JBFJGEIGGBA = 6;</code>
     * @param value the jBFJGEIGGBA to add
     * @return this
     */
    public RogueMiracleDataInfo addJBFJGEIGGBA(final JBFJGEIGGBAEntry value) {
      bitField0_ |= 0x00000010;
      jBFJGEIGGBA.add(value);
      return this;
    }

    /**
     * <code>repeated .RogueMiracleDataInfo.JBFJGEIGGBAEntry JBFJGEIGGBA = 6;</code>
     * @param values the jBFJGEIGGBA to add
     * @return this
     */
    public RogueMiracleDataInfo addAllJBFJGEIGGBA(final JBFJGEIGGBAEntry... values) {
      bitField0_ |= 0x00000010;
      jBFJGEIGGBA.addAll(values);
      return this;
    }

    @Override
    public RogueMiracleDataInfo copyFrom(final RogueMiracleDataInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        kABNOGFDKFI = other.kABNOGFDKFI;
        nDPAMBJKKFD = other.nDPAMBJKKFD;
        miracleId = other.miracleId;
        nFNNOMAMNAA = other.nFNNOMAMNAA;
        jBFJGEIGGBA.copyFrom(other.jBFJGEIGGBA);
      }
      return this;
    }

    @Override
    public RogueMiracleDataInfo mergeFrom(final RogueMiracleDataInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasKABNOGFDKFI()) {
        setKABNOGFDKFI(other.kABNOGFDKFI);
      }
      if (other.hasNDPAMBJKKFD()) {
        setNDPAMBJKKFD(other.nDPAMBJKKFD);
      }
      if (other.hasMiracleId()) {
        setMiracleId(other.miracleId);
      }
      if (other.hasNFNNOMAMNAA()) {
        setNFNNOMAMNAA(other.nFNNOMAMNAA);
      }
      if (other.hasJBFJGEIGGBA()) {
        getMutableJBFJGEIGGBA().addAll(other.jBFJGEIGGBA);
      }
      return this;
    }

    @Override
    public RogueMiracleDataInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      kABNOGFDKFI = 0;
      nDPAMBJKKFD = 0;
      miracleId = 0;
      nFNNOMAMNAA = 0;
      jBFJGEIGGBA.clear();
      return this;
    }

    @Override
    public RogueMiracleDataInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      jBFJGEIGGBA.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof RogueMiracleDataInfo)) {
        return false;
      }
      RogueMiracleDataInfo other = (RogueMiracleDataInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasKABNOGFDKFI() || kABNOGFDKFI == other.kABNOGFDKFI)
        && (!hasNDPAMBJKKFD() || nDPAMBJKKFD == other.nDPAMBJKKFD)
        && (!hasMiracleId() || miracleId == other.miracleId)
        && (!hasNFNNOMAMNAA() || nFNNOMAMNAA == other.nFNNOMAMNAA)
        && (!hasJBFJGEIGGBA() || jBFJGEIGGBA.equals(other.jBFJGEIGGBA));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(kABNOGFDKFI);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 72);
        output.writeUInt32NoTag(nDPAMBJKKFD);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(miracleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(nFNNOMAMNAA);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        for (int i = 0; i < jBFJGEIGGBA.length(); i++) {
          output.writeRawByte((byte) 50);
          output.writeMessageNoTag(jBFJGEIGGBA.get(i));
        }
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(kABNOGFDKFI);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nDPAMBJKKFD);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(miracleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(nFNNOMAMNAA);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += (1 * jBFJGEIGGBA.length()) + ProtoSink.computeRepeatedMessageSizeNoTag(jBFJGEIGGBA);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public RogueMiracleDataInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // kABNOGFDKFI
            kABNOGFDKFI = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // nDPAMBJKKFD
            nDPAMBJKKFD = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // miracleId
            miracleId = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // nFNNOMAMNAA
            nFNNOMAMNAA = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 50) {
              break;
            }
          }
          case 50: {
            // jBFJGEIGGBA
            tag = input.readRepeatedMessage(jBFJGEIGGBA, tag);
            bitField0_ |= 0x00000010;
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.kABNOGFDKFI, kABNOGFDKFI);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.nDPAMBJKKFD, nDPAMBJKKFD);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.miracleId, miracleId);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.nFNNOMAMNAA, nFNNOMAMNAA);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRepeatedMessage(FieldNames.jBFJGEIGGBA, jBFJGEIGGBA);
      }
      output.endObject();
    }

    @Override
    public RogueMiracleDataInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1444231062: {
            if (input.isAtField(FieldNames.kABNOGFDKFI)) {
              if (!input.trySkipNullValue()) {
                kABNOGFDKFI = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1423263980: {
            if (input.isAtField(FieldNames.nDPAMBJKKFD)) {
              if (!input.trySkipNullValue()) {
                nDPAMBJKKFD = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -164571796:
          case -806736983: {
            if (input.isAtField(FieldNames.miracleId)) {
              if (!input.trySkipNullValue()) {
                miracleId = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -681412180: {
            if (input.isAtField(FieldNames.nFNNOMAMNAA)) {
              if (!input.trySkipNullValue()) {
                nFNNOMAMNAA = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1130952882: {
            if (input.isAtField(FieldNames.jBFJGEIGGBA)) {
              if (!input.trySkipNullValue()) {
                input.readRepeatedMessage(jBFJGEIGGBA);
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public RogueMiracleDataInfo clone() {
      return new RogueMiracleDataInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static RogueMiracleDataInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new RogueMiracleDataInfo(), data).checkInitialized();
    }

    public static RogueMiracleDataInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueMiracleDataInfo(), input).checkInitialized();
    }

    public static RogueMiracleDataInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new RogueMiracleDataInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating RogueMiracleDataInfo messages
     */
    public static MessageFactory<RogueMiracleDataInfo> getFactory() {
      return RogueMiracleDataInfoFactory.INSTANCE;
    }

    /**
     * Protobuf type {@code JBFJGEIGGBAEntry}
     */
    public static final class JBFJGEIGGBAEntry extends ProtoMessage<JBFJGEIGGBAEntry> implements Cloneable {
      private static final long serialVersionUID = 0L;

      /**
       * <code>optional uint32 key = 1;</code>
       */
      private int key;

      /**
       * <code>optional uint32 value = 2;</code>
       */
      private int value_;

      private JBFJGEIGGBAEntry() {
      }

      /**
       * @return a new empty instance of {@code JBFJGEIGGBAEntry}
       */
      public static JBFJGEIGGBAEntry newInstance() {
        return new JBFJGEIGGBAEntry();
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @return whether the key field is set
       */
      public boolean hasKey() {
        return (bitField0_ & 0x00000001) != 0;
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @return this
       */
      public JBFJGEIGGBAEntry clearKey() {
        bitField0_ &= ~0x00000001;
        key = 0;
        return this;
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @return the key
       */
      public int getKey() {
        return key;
      }

      /**
       * <code>optional uint32 key = 1;</code>
       * @param value the key to set
       * @return this
       */
      public JBFJGEIGGBAEntry setKey(final int value) {
        bitField0_ |= 0x00000001;
        key = value;
        return this;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return whether the value_ field is set
       */
      public boolean hasValue() {
        return (bitField0_ & 0x00000002) != 0;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return this
       */
      public JBFJGEIGGBAEntry clearValue() {
        bitField0_ &= ~0x00000002;
        value_ = 0;
        return this;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @return the value_
       */
      public int getValue() {
        return value_;
      }

      /**
       * <code>optional uint32 value = 2;</code>
       * @param value the value_ to set
       * @return this
       */
      public JBFJGEIGGBAEntry setValue(final int value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        return this;
      }

      @Override
      public JBFJGEIGGBAEntry copyFrom(final JBFJGEIGGBAEntry other) {
        cachedSize = other.cachedSize;
        if ((bitField0_ | other.bitField0_) != 0) {
          bitField0_ = other.bitField0_;
          key = other.key;
          value_ = other.value_;
        }
        return this;
      }

      @Override
      public JBFJGEIGGBAEntry mergeFrom(final JBFJGEIGGBAEntry other) {
        if (other.isEmpty()) {
          return this;
        }
        cachedSize = -1;
        if (other.hasKey()) {
          setKey(other.key);
        }
        if (other.hasValue()) {
          setValue(other.value_);
        }
        return this;
      }

      @Override
      public JBFJGEIGGBAEntry clear() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        key = 0;
        value_ = 0;
        return this;
      }

      @Override
      public JBFJGEIGGBAEntry clearQuick() {
        if (isEmpty()) {
          return this;
        }
        cachedSize = -1;
        bitField0_ = 0;
        return this;
      }

      @Override
      public boolean equals(Object o) {
        if (o == this) {
          return true;
        }
        if (!(o instanceof JBFJGEIGGBAEntry)) {
          return false;
        }
        JBFJGEIGGBAEntry other = (JBFJGEIGGBAEntry) o;
        return bitField0_ == other.bitField0_
          && (!hasKey() || key == other.key)
          && (!hasValue() || value_ == other.value_);
      }

      @Override
      public void writeTo(final ProtoSink output) throws IOException {
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeRawByte((byte) 8);
          output.writeUInt32NoTag(key);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeRawByte((byte) 16);
          output.writeUInt32NoTag(value_);
        }
      }

      @Override
      protected int computeSerializedSize() {
        int size = 0;
        if ((bitField0_ & 0x00000001) != 0) {
          size += 1 + ProtoSink.computeUInt32SizeNoTag(key);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          size += 1 + ProtoSink.computeUInt32SizeNoTag(value_);
        }
        return size;
      }

      @Override
      @SuppressWarnings("fallthrough")
      public JBFJGEIGGBAEntry mergeFrom(final ProtoSource input) throws IOException {
        // Enabled Fall-Through Optimization (QuickBuffers)
        int tag = input.readTag();
        while (true) {
          switch (tag) {
            case 8: {
              // key
              key = input.readUInt32();
              bitField0_ |= 0x00000001;
              tag = input.readTag();
              if (tag != 16) {
                break;
              }
            }
            case 16: {
              // value_
              value_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              tag = input.readTag();
              if (tag != 0) {
                break;
              }
            }
            case 0: {
              return this;
            }
            default: {
              if (!input.skipField(tag)) {
                return this;
              }
              tag = input.readTag();
              break;
            }
          }
        }
      }

      @Override
      public void writeTo(final JsonSink output) throws IOException {
        output.beginObject();
        if ((bitField0_ & 0x00000001) != 0) {
          output.writeUInt32(FieldNames.key, key);
        }
        if ((bitField0_ & 0x00000002) != 0) {
          output.writeUInt32(FieldNames.value_, value_);
        }
        output.endObject();
      }

      @Override
      public JBFJGEIGGBAEntry mergeFrom(final JsonSource input) throws IOException {
        if (!input.beginObject()) {
          return this;
        }
        while (!input.isAtEnd()) {
          switch (input.readFieldHash()) {
            case 106079: {
              if (input.isAtField(FieldNames.key)) {
                if (!input.trySkipNullValue()) {
                  key = input.readUInt32();
                  bitField0_ |= 0x00000001;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            case 111972721: {
              if (input.isAtField(FieldNames.value_)) {
                if (!input.trySkipNullValue()) {
                  value_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                }
              } else {
                input.skipUnknownField();
              }
              break;
            }
            default: {
              input.skipUnknownField();
              break;
            }
          }
        }
        input.endObject();
        return this;
      }

      @Override
      public JBFJGEIGGBAEntry clone() {
        return new JBFJGEIGGBAEntry().copyFrom(this);
      }

      @Override
      public boolean isEmpty() {
        return ((bitField0_) == 0);
      }

      public static JBFJGEIGGBAEntry parseFrom(final byte[] data) throws
          InvalidProtocolBufferException {
        return ProtoMessage.mergeFrom(new JBFJGEIGGBAEntry(), data).checkInitialized();
      }

      public static JBFJGEIGGBAEntry parseFrom(final ProtoSource input) throws IOException {
        return ProtoMessage.mergeFrom(new JBFJGEIGGBAEntry(), input).checkInitialized();
      }

      public static JBFJGEIGGBAEntry parseFrom(final JsonSource input) throws IOException {
        return ProtoMessage.mergeFrom(new JBFJGEIGGBAEntry(), input).checkInitialized();
      }

      /**
       * @return factory for creating JBFJGEIGGBAEntry messages
       */
      public static MessageFactory<JBFJGEIGGBAEntry> getFactory() {
        return JBFJGEIGGBAEntryFactory.INSTANCE;
      }

      private enum JBFJGEIGGBAEntryFactory implements MessageFactory<JBFJGEIGGBAEntry> {
        INSTANCE;

        @Override
        public JBFJGEIGGBAEntry create() {
          return JBFJGEIGGBAEntry.newInstance();
        }
      }

      /**
       * Contains name constants used for serializing JSON
       */
      static class FieldNames {
        static final FieldName key = FieldName.forField("key");

        static final FieldName value_ = FieldName.forField("value");
      }
    }

    private enum RogueMiracleDataInfoFactory implements MessageFactory<RogueMiracleDataInfo> {
      INSTANCE;

      @Override
      public RogueMiracleDataInfo create() {
        return RogueMiracleDataInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName kABNOGFDKFI = FieldName.forField("KABNOGFDKFI");

      static final FieldName nDPAMBJKKFD = FieldName.forField("NDPAMBJKKFD");

      static final FieldName miracleId = FieldName.forField("miracleId", "miracle_id");

      static final FieldName nFNNOMAMNAA = FieldName.forField("NFNNOMAMNAA");

      static final FieldName jBFJGEIGGBA = FieldName.forField("JBFJGEIGGBA");
    }
  }
}
