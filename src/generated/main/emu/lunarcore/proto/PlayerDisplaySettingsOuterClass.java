// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerDisplaySettingsOuterClass {
  /**
   * Protobuf type {@code PlayerDisplaySettings}
   */
  public static final class PlayerDisplaySettings extends ProtoMessage<PlayerDisplaySettings> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional .DisplayRecordType EPMCKMCDIGB = 15;</code>
     */
    private int ePMCKMCDIGB;

    /**
     * <code>optional bool DKLJGCEHPJL = 5;</code>
     */
    private boolean dKLJGCEHPJL;

    /**
     * <code>optional bool BPELFJGIJID = 7;</code>
     */
    private boolean bPELFJGIJID;

    /**
     * <code>optional bool DAFHJJEDMOF = 8;</code>
     */
    private boolean dAFHJJEDMOF;

    /**
     * <code>optional bool KDAKDMCGFND = 11;</code>
     */
    private boolean kDAKDMCGFND;

    /**
     * <code>optional bool KEACGBKOFKF = 13;</code>
     */
    private boolean kEACGBKOFKF;

    private PlayerDisplaySettings() {
    }

    /**
     * @return a new empty instance of {@code PlayerDisplaySettings}
     */
    public static PlayerDisplaySettings newInstance() {
      return new PlayerDisplaySettings();
    }

    /**
     * <code>optional .DisplayRecordType EPMCKMCDIGB = 15;</code>
     * @return whether the ePMCKMCDIGB field is set
     */
    public boolean hasEPMCKMCDIGB() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional .DisplayRecordType EPMCKMCDIGB = 15;</code>
     * @return this
     */
    public PlayerDisplaySettings clearEPMCKMCDIGB() {
      bitField0_ &= ~0x00000001;
      ePMCKMCDIGB = 0;
      return this;
    }

    /**
     * <code>optional .DisplayRecordType EPMCKMCDIGB = 15;</code>
     * @return the ePMCKMCDIGB
     */
    public DisplayRecordTypeOuterClass.DisplayRecordType getEPMCKMCDIGB() {
      return DisplayRecordTypeOuterClass.DisplayRecordType.forNumber(ePMCKMCDIGB);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PlayerDisplaySettings#getEPMCKMCDIGB()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getEPMCKMCDIGBValue() {
      return ePMCKMCDIGB;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link DisplayRecordTypeOuterClass.DisplayRecordType}. Setting an invalid value
     * can cause {@link PlayerDisplaySettings#getEPMCKMCDIGB()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PlayerDisplaySettings setEPMCKMCDIGBValue(final int value) {
      bitField0_ |= 0x00000001;
      ePMCKMCDIGB = value;
      return this;
    }

    /**
     * <code>optional .DisplayRecordType EPMCKMCDIGB = 15;</code>
     * @param value the ePMCKMCDIGB to set
     * @return this
     */
    public PlayerDisplaySettings setEPMCKMCDIGB(
        final DisplayRecordTypeOuterClass.DisplayRecordType value) {
      bitField0_ |= 0x00000001;
      ePMCKMCDIGB = value.getNumber();
      return this;
    }

    /**
     * <code>optional bool DKLJGCEHPJL = 5;</code>
     * @return whether the dKLJGCEHPJL field is set
     */
    public boolean hasDKLJGCEHPJL() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool DKLJGCEHPJL = 5;</code>
     * @return this
     */
    public PlayerDisplaySettings clearDKLJGCEHPJL() {
      bitField0_ &= ~0x00000002;
      dKLJGCEHPJL = false;
      return this;
    }

    /**
     * <code>optional bool DKLJGCEHPJL = 5;</code>
     * @return the dKLJGCEHPJL
     */
    public boolean getDKLJGCEHPJL() {
      return dKLJGCEHPJL;
    }

    /**
     * <code>optional bool DKLJGCEHPJL = 5;</code>
     * @param value the dKLJGCEHPJL to set
     * @return this
     */
    public PlayerDisplaySettings setDKLJGCEHPJL(final boolean value) {
      bitField0_ |= 0x00000002;
      dKLJGCEHPJL = value;
      return this;
    }

    /**
     * <code>optional bool BPELFJGIJID = 7;</code>
     * @return whether the bPELFJGIJID field is set
     */
    public boolean hasBPELFJGIJID() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool BPELFJGIJID = 7;</code>
     * @return this
     */
    public PlayerDisplaySettings clearBPELFJGIJID() {
      bitField0_ &= ~0x00000004;
      bPELFJGIJID = false;
      return this;
    }

    /**
     * <code>optional bool BPELFJGIJID = 7;</code>
     * @return the bPELFJGIJID
     */
    public boolean getBPELFJGIJID() {
      return bPELFJGIJID;
    }

    /**
     * <code>optional bool BPELFJGIJID = 7;</code>
     * @param value the bPELFJGIJID to set
     * @return this
     */
    public PlayerDisplaySettings setBPELFJGIJID(final boolean value) {
      bitField0_ |= 0x00000004;
      bPELFJGIJID = value;
      return this;
    }

    /**
     * <code>optional bool DAFHJJEDMOF = 8;</code>
     * @return whether the dAFHJJEDMOF field is set
     */
    public boolean hasDAFHJJEDMOF() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional bool DAFHJJEDMOF = 8;</code>
     * @return this
     */
    public PlayerDisplaySettings clearDAFHJJEDMOF() {
      bitField0_ &= ~0x00000008;
      dAFHJJEDMOF = false;
      return this;
    }

    /**
     * <code>optional bool DAFHJJEDMOF = 8;</code>
     * @return the dAFHJJEDMOF
     */
    public boolean getDAFHJJEDMOF() {
      return dAFHJJEDMOF;
    }

    /**
     * <code>optional bool DAFHJJEDMOF = 8;</code>
     * @param value the dAFHJJEDMOF to set
     * @return this
     */
    public PlayerDisplaySettings setDAFHJJEDMOF(final boolean value) {
      bitField0_ |= 0x00000008;
      dAFHJJEDMOF = value;
      return this;
    }

    /**
     * <code>optional bool KDAKDMCGFND = 11;</code>
     * @return whether the kDAKDMCGFND field is set
     */
    public boolean hasKDAKDMCGFND() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional bool KDAKDMCGFND = 11;</code>
     * @return this
     */
    public PlayerDisplaySettings clearKDAKDMCGFND() {
      bitField0_ &= ~0x00000010;
      kDAKDMCGFND = false;
      return this;
    }

    /**
     * <code>optional bool KDAKDMCGFND = 11;</code>
     * @return the kDAKDMCGFND
     */
    public boolean getKDAKDMCGFND() {
      return kDAKDMCGFND;
    }

    /**
     * <code>optional bool KDAKDMCGFND = 11;</code>
     * @param value the kDAKDMCGFND to set
     * @return this
     */
    public PlayerDisplaySettings setKDAKDMCGFND(final boolean value) {
      bitField0_ |= 0x00000010;
      kDAKDMCGFND = value;
      return this;
    }

    /**
     * <code>optional bool KEACGBKOFKF = 13;</code>
     * @return whether the kEACGBKOFKF field is set
     */
    public boolean hasKEACGBKOFKF() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional bool KEACGBKOFKF = 13;</code>
     * @return this
     */
    public PlayerDisplaySettings clearKEACGBKOFKF() {
      bitField0_ &= ~0x00000020;
      kEACGBKOFKF = false;
      return this;
    }

    /**
     * <code>optional bool KEACGBKOFKF = 13;</code>
     * @return the kEACGBKOFKF
     */
    public boolean getKEACGBKOFKF() {
      return kEACGBKOFKF;
    }

    /**
     * <code>optional bool KEACGBKOFKF = 13;</code>
     * @param value the kEACGBKOFKF to set
     * @return this
     */
    public PlayerDisplaySettings setKEACGBKOFKF(final boolean value) {
      bitField0_ |= 0x00000020;
      kEACGBKOFKF = value;
      return this;
    }

    @Override
    public PlayerDisplaySettings copyFrom(final PlayerDisplaySettings other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        ePMCKMCDIGB = other.ePMCKMCDIGB;
        dKLJGCEHPJL = other.dKLJGCEHPJL;
        bPELFJGIJID = other.bPELFJGIJID;
        dAFHJJEDMOF = other.dAFHJJEDMOF;
        kDAKDMCGFND = other.kDAKDMCGFND;
        kEACGBKOFKF = other.kEACGBKOFKF;
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final PlayerDisplaySettings other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasEPMCKMCDIGB()) {
        setEPMCKMCDIGBValue(other.ePMCKMCDIGB);
      }
      if (other.hasDKLJGCEHPJL()) {
        setDKLJGCEHPJL(other.dKLJGCEHPJL);
      }
      if (other.hasBPELFJGIJID()) {
        setBPELFJGIJID(other.bPELFJGIJID);
      }
      if (other.hasDAFHJJEDMOF()) {
        setDAFHJJEDMOF(other.dAFHJJEDMOF);
      }
      if (other.hasKDAKDMCGFND()) {
        setKDAKDMCGFND(other.kDAKDMCGFND);
      }
      if (other.hasKEACGBKOFKF()) {
        setKEACGBKOFKF(other.kEACGBKOFKF);
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      ePMCKMCDIGB = 0;
      dKLJGCEHPJL = false;
      bPELFJGIJID = false;
      dAFHJJEDMOF = false;
      kDAKDMCGFND = false;
      kEACGBKOFKF = false;
      return this;
    }

    @Override
    public PlayerDisplaySettings clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerDisplaySettings)) {
        return false;
      }
      PlayerDisplaySettings other = (PlayerDisplaySettings) o;
      return bitField0_ == other.bitField0_
        && (!hasEPMCKMCDIGB() || ePMCKMCDIGB == other.ePMCKMCDIGB)
        && (!hasDKLJGCEHPJL() || dKLJGCEHPJL == other.dKLJGCEHPJL)
        && (!hasBPELFJGIJID() || bPELFJGIJID == other.bPELFJGIJID)
        && (!hasDAFHJJEDMOF() || dAFHJJEDMOF == other.dAFHJJEDMOF)
        && (!hasKDAKDMCGFND() || kDAKDMCGFND == other.kDAKDMCGFND)
        && (!hasKEACGBKOFKF() || kEACGBKOFKF == other.kEACGBKOFKF);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 120);
        output.writeEnumNoTag(ePMCKMCDIGB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 40);
        output.writeBoolNoTag(dKLJGCEHPJL);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 56);
        output.writeBoolNoTag(bPELFJGIJID);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 64);
        output.writeBoolNoTag(dAFHJJEDMOF);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 88);
        output.writeBoolNoTag(kDAKDMCGFND);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 104);
        output.writeBoolNoTag(kEACGBKOFKF);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(ePMCKMCDIGB);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerDisplaySettings mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 120: {
            // ePMCKMCDIGB
            final int value = input.readInt32();
            if (DisplayRecordTypeOuterClass.DisplayRecordType.forNumber(value) != null) {
              ePMCKMCDIGB = value;
              bitField0_ |= 0x00000001;
            }
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // dKLJGCEHPJL
            dKLJGCEHPJL = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 56) {
              break;
            }
          }
          case 56: {
            // bPELFJGIJID
            bPELFJGIJID = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // dAFHJJEDMOF
            dAFHJJEDMOF = input.readBool();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // kDAKDMCGFND
            kDAKDMCGFND = input.readBool();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // kEACGBKOFKF
            kEACGBKOFKF = input.readBool();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeEnum(FieldNames.ePMCKMCDIGB, ePMCKMCDIGB, DisplayRecordTypeOuterClass.DisplayRecordType.converter());
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.dKLJGCEHPJL, dKLJGCEHPJL);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.bPELFJGIJID, bPELFJGIJID);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeBool(FieldNames.dAFHJJEDMOF, dAFHJJEDMOF);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeBool(FieldNames.kDAKDMCGFND, kDAKDMCGFND);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeBool(FieldNames.kEACGBKOFKF, kEACGBKOFKF);
      }
      output.endObject();
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1204049952: {
            if (input.isAtField(FieldNames.ePMCKMCDIGB)) {
              if (!input.trySkipNullValue()) {
                final DisplayRecordTypeOuterClass.DisplayRecordType value = input.readEnum(DisplayRecordTypeOuterClass.DisplayRecordType.converter());
                if (value != null) {
                  ePMCKMCDIGB = value.getNumber();
                  bitField0_ |= 0x00000001;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1271460558: {
            if (input.isAtField(FieldNames.dKLJGCEHPJL)) {
              if (!input.trySkipNullValue()) {
                dKLJGCEHPJL = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2139467414: {
            if (input.isAtField(FieldNames.bPELFJGIJID)) {
              if (!input.trySkipNullValue()) {
                bPELFJGIJID = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 573593030: {
            if (input.isAtField(FieldNames.dAFHJJEDMOF)) {
              if (!input.trySkipNullValue()) {
                dAFHJJEDMOF = input.readBool();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 725164556: {
            if (input.isAtField(FieldNames.kDAKDMCGFND)) {
              if (!input.trySkipNullValue()) {
                kDAKDMCGFND = input.readBool();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1826287046: {
            if (input.isAtField(FieldNames.kEACGBKOFKF)) {
              if (!input.trySkipNullValue()) {
                kEACGBKOFKF = input.readBool();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerDisplaySettings clone() {
      return new PlayerDisplaySettings().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerDisplaySettings parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), data).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerDisplaySettings messages
     */
    public static MessageFactory<PlayerDisplaySettings> getFactory() {
      return PlayerDisplaySettingsFactory.INSTANCE;
    }

    private enum PlayerDisplaySettingsFactory implements MessageFactory<PlayerDisplaySettings> {
      INSTANCE;

      @Override
      public PlayerDisplaySettings create() {
        return PlayerDisplaySettings.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName ePMCKMCDIGB = FieldName.forField("EPMCKMCDIGB");

      static final FieldName dKLJGCEHPJL = FieldName.forField("DKLJGCEHPJL");

      static final FieldName bPELFJGIJID = FieldName.forField("BPELFJGIJID");

      static final FieldName dAFHJJEDMOF = FieldName.forField("DAFHJJEDMOF");

      static final FieldName kDAKDMCGFND = FieldName.forField("KDAKDMCGFND");

      static final FieldName kEACGBKOFKF = FieldName.forField("KEACGBKOFKF");
    }
  }
}
